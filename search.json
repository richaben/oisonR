[{"path":"https://richaben.github.io/oisonR/articles/bien-demarrer-avec-oisonR.html","id":"pourquoi-un-package-oisonr","dir":"Articles","previous_headings":"","what":"Pourquoi un package oisonR ?","title":"1. Bien démarrer avec le package oisonR","text":"Ce package été développé pour faciliter l’accès aux données bancarisées dans OISON, et ainsi permettre leur ré-utilisation dans le cadre de projets de valorisation (téléchargement des données et mises en formes dans des formats exploitables).","code":""},{"path":"https://richaben.github.io/oisonR/articles/bien-demarrer-avec-oisonR.html","id":"installation-et-chargement","dir":"Articles","previous_headings":"Pourquoi un package oisonR ?","what":"Installation et chargement","title":"1. Bien démarrer avec le package oisonR","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"richaben/oisonR\", build_vignettes = TRUE)  # Chargement library(oisonR)"},{"path":"https://richaben.github.io/oisonR/articles/bien-demarrer-avec-oisonR.html","id":"prérequis-pour-lutilisation-du-package","dir":"Articles","previous_headings":"Pourquoi un package oisonR ?","what":"Prérequis pour l’utilisation du package","title":"1. Bien démarrer avec le package oisonR","text":"Avec ce package, l’accès aux données OISON peut se faire via deux sources possibles : par une connexion directe à l’application (via une API) nécessitant un accès login/mot de passe. Par ce moyen, ce sont les données en temps réel qui peuvent être obtenues ; mais elles sont téléchargées plus lentement (requête limitée en nombre de lignes). par la base de données SQL. Cela nécessite d’obtenir les paramètres de connexion à la base au préalable, et une connexion au réseau interne de l’OFB (ou au VPN). Par ce moyen, les données accessibles sont datées à J-1 sur une copie de la base (en lecture seule). Ici, un volume important de données peut être téléchargé (plus rapidement que par l’API). 💡 Certaines fonctions exigent des paramètres particuliers pour l’accès aux données (par exemple login, mot de passe, etc…). Pour ne pas saisir ces paramètres à chaque utilisation, il est conseillé de les stocker directement dans l’environnement R (cf. procédure ci-dessous). Deux fonctions utiles sont disponibles pour vérifier si les informations de connexion sont bien sauvegardées et stockées dans l’environnement R de l’utilisateur:","code":"## pour vérifier les éléments de connexion via l'api check_acces_oison_api()  ## pour vérifier les éléments de connexion via la connexion SQL check_acces_oison_sql()"},{"path":"https://richaben.github.io/oisonR/articles/bien-demarrer-avec-oisonR.html","id":"marche-à-suivre-pour-stocker-des-informations-dans-lenvironnement-r","dir":"Articles","previous_headings":"Pourquoi un package oisonR ?","what":"Marche à suivre pour stocker des informations dans l’environnement R","title":"1. Bien démarrer avec le package oisonR","text":"⚠ Il faut bien renseigner les informations dans l’environnement R avec le même nom que ci-dessous pour que ces éléments soient vérifiables et utilisables par les fonctions check_acces_oison_***(). Connexion via l’API Connexion via la base SQL ⚠ Requiert d’avoir la bonne configuration (les bons paramètres)","code":"## 1° - ouvrir le fichier de configuration de l'environnement R avec la fonction : usethis::edit_r_environ()  ## 2° - dans la fenêtre ouverte intitulée '.Renviron',  # sauvegarder les lignes suivantes correspondant aux identifiants OISON_ID = \"john.doe@ofb.gouv.fr\" OISON_PASSWORD = \"moncodesecret\"  ## 3° - dans les fonctions, ces informations peuvent être utilisées avec les  ## lignes suivantes (à la place des 'vrais' identifiants) : Sys.getenv('OISON_ID') Sys.getenv('OISON_PASSWORD') ## 1° - ouvrir le fichier de configuration de l'environnement R avec la fonction : usethis::edit_r_environ()  ## 2° - dans la fenêtre ouverte intitulée '.Renviron',  # sauvegarder les lignes suivantes avec le bon paramétrage OISON_BDname = 'NOM_DE_LA_BDD' OISON_BDhostname = \"URL_DE_LA_BDD\" OISON_BDport = \"LE_PORT_DE_LA_BDD\" OISON_BDuid = \"IDENTIFIANT_DE_CONNEXION_A_LA_BDD\" OISON_BDpwd = \"MOT_DE_PASSE_DE_CONNEXION_A_LA_BDD\"  ## 3° - dans les fonctions, ces informations doivent être utilisées avec les ## lignes suivantes : Sys.getenv('OISON_BDname') Sys.getenv('OISON_BDhostname') Sys.getenv('OISON_BDport') Sys.getenv('OISON_BDuid') Sys.getenv('OISON_BDpwd')"},{"path":[]},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"chargement-des-packages","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL","what":"Chargement des packages","title":"2. Comment utiliser le package oisonR ?","text":"Quelques packages sont nécessaires pour exécuter les exemples ci-dessous.","code":"library(oisonR) library(sf) library(dplyr) # devtools::install_github(\"MaelTheuliere/COGiter\") library(COGiter)"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"les-observations-taxons","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL","what":"Les observations taxons","title":"2. Comment utiliser le package oisonR ?","text":"Les observations taxons de OISON sont récupérables avec la fonction get_table_taxon_sql(). Avant son utilisation, il faut toutefois : s’assurer de disposer des paramètres de connexion à la base SQL (cf. la vignette oisonR pour plus de détails) ; puis, initier la connexion à la base de données avec la fonction start_sql_connexion(). La fonction permet de récupérer l’ensemble des observations de la base, sauf si une géométrie est précisée en argument (argument geometrie dans la fonction). Après récupération des données, il est conseillé de stopper la connexion à la base avec la fonction stop_sql_connexion().","code":""},{"path":[]},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"création-dune-géométrie-pour-la-bretagne","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations taxons > Exemple pour réaliser un export des observations taxons sur les écrevisses en Bretagne pour l’année 2023","what":"1. Création d’une géométrie pour la Bretagne","title":"2. Comment utiliser le package oisonR ?","text":"Le package COGiter peut être utilisé pour récupérer la géométrie correspondant à la région, et la convertir en chaîne de caractères utilisables pour la requête spatiale. Le début de la géométrie prend la forme suivante : MULTIPOLYGON (((269637.9 6734259, 270864.3 6735502, 270508.8 6736507, 270517.1 6738116, 269527.2 673…..","code":"geom_BZH <-   COGiter::regions_geo %>%   # filtre sur BZH   dplyr::filter(REG == 53) %>%   sf::st_as_sfc() %>%   # convert to text   sf::st_as_text()"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"récupération-des-données-observations-taxons","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations taxons > Exemple pour réaliser un export des observations taxons sur les écrevisses en Bretagne pour l’année 2023","what":"2. Récupération des données observations taxons","title":"2. Comment utiliser le package oisonR ?","text":"Le résultat de la requête est un objet de type data.frame. Les noms de colonnes peuvent être obtenus de la façon suivante :  ⚠️ noter qu’ici les champs de données peuvent être différents de ceux présents dans les exports de l’application OISON* (.e *champs manquants). Une vue simplifiée et facilement utilisable été priviligée !","code":"# a) connexion bdd_oison <- start_sql_connexion()  # b) requete oison_BZH <-    get_table_taxon_sql(conn = bdd_oison,                       geometrie = geom_BZH)  # d) stop de la connexion stop_sql_connexion(conn = bdd_oison) oison_BZH %>%    names()"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"filtrage-des-données","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations taxons > Exemple pour réaliser un export des observations taxons sur les écrevisses en Bretagne pour l’année 2023","what":"3. Filtrage des données","title":"2. Comment utiliser le package oisonR ?","text":"Pour extraire les observations taxons correspondant aux écrevisses datées de 2023, il suffit de réaliser un filtrage à partir () de la colonne nom_vernaculaire et (ii) de la nouvelle colonne annee (créée à partir de la colonne date) :","code":"oison_BZH_ecrevisse_2023 <-   oison_BZH %>%    # detection pattern 'creviss' et filtre   dplyr::filter(grepl('creviss', nom_vernaculaire)) %>%    # création colonne annee   dplyr::mutate(annee = format(date, '%Y')) %>%    # filtre sur annee 2023   dplyr::filter(annee == 2023)"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"visualisation-des-données","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations taxons > Exemple pour réaliser un export des observations taxons sur les écrevisses en Bretagne pour l’année 2023","what":"4. Visualisation des données","title":"2. Comment utiliser le package oisonR ?","text":"Pour une réutilisation en analyse spatiale, la colonne geometry doit être convertie au format sf (simple features) avec la fonction st_as_sf() du package sf. Avec cet objet, les visualisations interactives sont possibles avec le package mapview (à noter qu’il ne s’agit pas des vraies données dans l’exemple ci-dessous… 🕶) :","code":"oison_BZH_ecrevisse_2023_sf <-   oison_BZH_ecrevisse_2023 %>%    sf::st_as_sf() oison_BZH_ecrevisse_2023_sf %>%    mapview::mapview()"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"export-des-données","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations taxons > Exemple pour réaliser un export des observations taxons sur les écrevisses en Bretagne pour l’année 2023","what":"5. Export des données","title":"2. Comment utiliser le package oisonR ?","text":"L’export sous différents formats est possible, dont le format geopackage (.gpkg) pour une réutilisation sous SIG. 💡 Le format gpkg permet de conserver les différents types de géométries pouvant se retrouver dans les observations OISON (points, polygones, lignes, …).","code":"sf::write_sf(oison_BZH_ecrevisse_2023_sf,               \"D:/oison_BZH_ecrevisse_2023.gpkg\",               driver = \"GPKG\")"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"les-observations-milieu","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL","what":"Les observations milieu","title":"2. Comment utiliser le package oisonR ?","text":"Les observations milieu de OISON sont récupérables avec la fonction get_table_milieu_sql(). Comme précédemment, il faut disposer des paramètres de connexion à la base SQL (cf. la vignette oisonR pour plus de détails). Par défaut, la fonction permet de récupérer l’ensemble des observations de la base, sauf si une géométrie est précisée en argument (argument geometrie dans la fonction).","code":""},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"exemple-pour-les-observations-milieu-pour-la-région-bretagne","dir":"Articles","previous_headings":"Récupérer les données via l’accès à la base SQL > Les observations milieu","what":"Exemple pour les observations milieu pour la région Bretagne","title":"2. Comment utiliser le package oisonR ?","text":"L’exemple ci-dessous correspond à une extraction des observations milieu sur la zone géographique de la région Bretagne, en utilisant l’objet précédemment créé (geom_BZH ; cf. ci-dessus) : Le résultat de la requête est de nouveau un objet de type data.frame. Les noms de colonnes peuvent être obtenus de la façon suivante :","code":"# a) connexion bdd_oison <- start_sql_connexion()  # b) requete oison_milieu_BZH <-    get_table_milieu_sql(conn = bdd_oison,                       geometrie = geom_BZH)  # d) stop de la connexion stop_sql_connexion(conn = bdd_oison) oison_milieu_BZH %>%    names()"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"récupérer-les-données-via-lapi","dir":"Articles","previous_headings":"","what":"Récupérer les données via l’API","title":"2. Comment utiliser le package oisonR ?","text":"Trois fonctions permettent de récupérer les données via une “API”. Pour le moment, il n’est possible que de récupérer les observations taxons. Les fonctions sont les suivantes : get_taxon_dpt() pour récupérer les observations taxons sur un département en spécifiant son code insee ; get_taxon_region() pour récupérer les observations taxons sur une région en spécifiant son code insee ; get_taxon_polygon() pour récupérer les observations taxons sur une zone géographique définie au préalable ou tracée à la volée avec une fonction dédiée. Avec ces 3 fonctions, il est possible de collecter les données (avec l’argument collect_all = TRUE) ou simplement consulter rapidement le nombre de données sur l’étendue géographique (lorsque l’argument collect_all = FALSE). Une période de temps peut être également spécifiée avec les arguments date_min et date_max. La récupération des données est séquencée pour limiter la surcharge de l’API.","code":""},{"path":[]},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"consultation-simple-sur-lannée-2022-avec-collect_all-false","dir":"Articles","previous_headings":"Récupérer les données via l’API > Exemples pour le département 27 avec get_taxon_dpt()","what":"Consultation simple sur l’année 2022 (avec collect_all = FALSE)","title":"2. Comment utiliser le package oisonR ?","text":"","code":"get_taxon_dpt(   dpt_code = \"27\",   login = \"john.doe@ofb.gouv.fr\",   mdp = \"mon_mdp\",   date_min = '2022-01-01',   date_max = '2022-12-31',   collect_all = F)"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"récupération-des-données-sur-lannée-2022-avec-collect_all-true","dir":"Articles","previous_headings":"Récupérer les données via l’API > Exemples pour le département 27 avec get_taxon_dpt()","what":"Récupération des données sur l’année 2022 (avec collect_all = TRUE)","title":"2. Comment utiliser le package oisonR ?","text":"Le résultat de la requête est de nouveau un objet de type data.frame. Les noms de colonnes peuvent être obtenus de la façon suivante :","code":"oison_27_df <-    get_taxon_dpt(   dpt_code = \"27\",   login = \"john.doe@ofb.gouv.fr\",   mdp = \"mon_mdp\",   date_min = '2022-01-01',   date_max = '2022-12-31',   collect_all = T) oison_27_df %>%    names()"},{"path":"https://richaben.github.io/oisonR/articles/comment-utiliser-oisonR.html","id":"exemple-avec-la-fonction-get_taxon_polygon","dir":"Articles","previous_headings":"Récupérer les données via l’API","what":"Exemple avec la fonction get_taxon_polygon()","title":"2. Comment utiliser le package oisonR ?","text":"Cette fonction permet de consulter/récupérer (selon l’argument collect_all = FALSE ou collect_all = TRUE) les données sur une zone géographique définie par un polygone. Spécifier une plage de date est également possible. Le polygone peut : s’écrire manuellement sous cette forme ; se tracer à la volée lorsque l’argument draw_zone = TRUE est spécifié dans la fonction. Dès lors, un outil de sélection de zone s’ouvre (via une fenêtre interactive shiny ; cf. ci-dessous) permettant le traçage du polygone et son stockage dans l’environnement de travail pour la requête.","code":"#> [1] \"POLYGON ((410677.9 6877209, 413275.2 6929083, 496961.8 6925506, 495122.6 6873600, 410677.9 6877209))\" get_taxon_polygon(   login = \"john.doe@ofb.gouv.fr\",   mdp = \"mon_mdp\",   draw_zone = T,   collect_all = F)"},{"path":"https://richaben.github.io/oisonR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benoit Richard. Author, maintainer.","code":""},{"path":"https://richaben.github.io/oisonR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Richard B (2024). oisonR: R Package pour collecter et utiliser les données OISON. R package version 0.2.0, https://richaben.github.io/oisonR/, https://github.com/richaben/oisonR.","code":"@Manual{,   title = {oisonR: R Package pour collecter et utiliser les données OISON},   author = {Benoit Richard},   year = {2024},   note = {R package version 0.2.0,     https://richaben.github.io/oisonR/},   url = {https://github.com/richaben/oisonR}, }"},{"path":"https://richaben.github.io/oisonR/index.html","id":"oisonr-","dir":"","previous_headings":"","what":"R Package pour collecter et utiliser les données OISON","title":"R Package pour collecter et utiliser les données OISON","text":"OISON est un outil de saisies naturalistes pour les agents de l’Office français de la biodiversité (OFB). Il permet de collecter des données relatives aux espèces et aux milieux, qui sont majoritairement issues d’observations opportunistes, fortuites ou protocolées. L’accès à l’outil est restreint et nécessite un compte utilisateur (création de compte nécessaire). Ce package été développé dans le de faciliter l’accès aux données bancarisées dans OISON, et ainsi permettre leur ré-utilisation dans le cadre de projets de valorisation (téléchargement des données et mise en forme dans des formats exploitables).","code":""},{"path":"https://richaben.github.io/oisonR/index.html","id":"id_-installation-et-chargement","dir":"","previous_headings":"","what":"📦 Installation et chargement","title":"R Package pour collecter et utiliser les données OISON","text":"La version de développement sur GitHub (le package devtools est à installer si nécessaire). Pour charger le package oisonR :","code":"# install.packages(\"devtools\") devtools::install_github(\"richaben/oisonR\", build_vignettes = TRUE) library(oisonR)"},{"path":"https://richaben.github.io/oisonR/index.html","id":"id_-vignettes--documentation","dir":"","previous_headings":"","what":"📚 Vignettes / Documentation","title":"R Package pour collecter et utiliser les données OISON","text":"Quelques vignettes sont disponibles pour l’utilisation du package : Bien démarrer avec le package oisonR Comment utiliser le package oisonR ?","code":""},{"path":"https://richaben.github.io/oisonR/index.html","id":"id_️-issues--bugs","dir":"","previous_headings":"","what":"✉️ Issues / Bugs","title":"R Package pour collecter et utiliser les données OISON","text":"Pour signaler un bug, une erreur ou une suggestion, merci d’utiliser les issues sur le dépôt GitHub du package.","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_habitats_taxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","title":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","text":"partir d'un dataframe issu de la requête OISON, cette fonction permet de récupérer les informations relatives aux Habitats présentés sur la fiche taxon de l'INPN. Par exemple, pour le Rougegorge familier, les infos sont collectés sur sa fiche ici.","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_habitats_taxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","text":"","code":"add_inpn_habitats_taxon(df, cdnom_col, nom_vern_col, nom_sci_col)"},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_habitats_taxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","text":"df un dataframe issu d'une requête taxon OISON avec à minima les 3 colonnes suivantes : - le nom vernaculaire - le nom scientifique - le code taxon cdnom_col le nom de la colonne contenant le code taxon utilisé dans l'URL de l'INPN nom_vern_col le nom de la colonne contenant le(s) nom(s) vernaculaire(s) à conserver nom_sci_col le nom de la colonne contenant le(s) nom(s) scientifique(s) à conserver","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_habitats_taxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","text":"un dataframe avec les Codes Habitats pour chacun des taxons du tableau initial","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_habitats_taxon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Récupération des Codes Habitats à partir de la fiche taxon présente sur l'INPN — add_inpn_habitats_taxon","text":"","code":"if (FALSE) { # \\dontrun{ ## Requete sur quelques observations data_oison <-   oisonR::get_taxon_dpt(dpt_code = \"27\",                         login = \"john.doe@ofb.gouv.fr\",                         mdp = \"mon_mdp\",                         date_min = \"2023-01-01\",                         date_max = \"2023-02-01\",                         collect_all = TRUE) %>%   dplyr::select(cd_ref, nom_scientifique, nom_vernaculaire)  ## Collecte des informations Codes Habitats code_habitats <-   add_inpn_habitats_taxon(df = data_oison,                           cdnom_col = cd_ref,                           nom_sci_col = nom_scientifique,                           nom_vern_col = nom_vernaculaire)  } # }"},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_maille_taxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","title":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","text":"Récupération des mailles 10x10km sur l'INPN sur une zone shape","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_maille_taxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","text":"","code":"add_inpn_maille_taxon(df, shape)"},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_maille_taxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","text":"df un dataframe issu de la requete OISON shape un dataframe contenant une couche shape pour la zone souhaitée","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_maille_taxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","text":"un dataframe avec les mailles 10x10km INPN","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_maille_taxon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Récupération des mailles 10x10km sur l'INPN sur une zone shape — add_inpn_maille_taxon","text":"","code":"if (FALSE) { # \\dontrun{  data_oison <- get_data_dpt(dpt_code = \"27\", login = \"john.doe@ofb.gouv.fr\", mdp = \"mon_mdp\")  normandie_shp <- readRDS(file = './regions_geo_normandie.rds') %>% sf::st_transform(crs = 4326)  maille_inpn <- add_inpn_maille_taxon(df = data_oison,  shape = normandie_shp)  } # }"},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_repartition_taxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","title":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","text":"La fonction permet de récupérer rapidement les informations, quand elles existent, sur la répartition d'un taxon à l'échelle des départements sur le site de l'INPN. Ces informations sont utilisées pour la validation des données du SINP. Plusieurs statuts de présence/absence sont possibles (voir INPN pour plus d'infos). Exemple de carte de répartition pour la Salamandre tachetée : sur sa fiche ici.","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_repartition_taxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","text":"","code":"add_inpn_repartition_taxon(cd_nom, code_dpt)"},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_repartition_taxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","text":"cd_nom le code cd_nom vérifié du taxon code_dpt le code insee du département","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_repartition_taxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","text":"un dataframe avec les informations de répartition pour le taxon","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_inpn_repartition_taxon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Récupération des infos de répartition d'un taxon à l'échelle départementale selon l'INPN — add_inpn_repartition_taxon","text":"","code":"if (FALSE) { # \\dontrun{ ## Exemple pour la Salamandre tachetée sur le département du Calvados (14) oisonR::add_inpn_repartition_taxon(cd_nom = 965096, code_dpt = 14)  ## Pour une liste de taxons et de départements ### 3 taxons taxons <- c(965096, # Salamandre tachetée            310, # Grenouille agile            77949 # Couleuvre verte et jaune            ) # 5 départements departements <- c(14, 27, 50, 61, 76)  tidyr::expand_grid(taxons, departements) %>%   purrr::pmap_dfr(., ~add_inpn_repartition_taxon(cd_nom = .x, code_dpt = .y))  } # }"},{"path":"https://richaben.github.io/oisonR/reference/add_type_geometrie.html","id":null,"dir":"Reference","previous_headings":"","what":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","title":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","text":"Ajoute une colonne contenant le type de geometrie pour les observations","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_type_geometrie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","text":"","code":"add_type_geometrie(oison_df)"},{"path":"https://richaben.github.io/oisonR/reference/add_type_geometrie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","text":"oison_df un dataframe de classe sf","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_type_geometrie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","text":"un dataframe avec une colonne `type_geometrie`","code":""},{"path":"https://richaben.github.io/oisonR/reference/add_type_geometrie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ajoute une colonne contenant le type de geometrie pour les observations — add_type_geometrie","text":"","code":"if (FALSE) { # \\dontrun{ oison_taxon <-   oison_taxon %>%   sf::st_as_sf() %>%   add_type_geometrie() } # }"},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Test si les accès à l'API OISON sont bien renseignés — check_acces_oison_api","title":"Test si les accès à l'API OISON sont bien renseignés — check_acces_oison_api","text":"Fonction pour tester si les accès login/mdp sont bien stockés dans l'environnement R (fichier `.Renviron`).","code":""},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test si les accès à l'API OISON sont bien renseignés — check_acces_oison_api","text":"","code":"check_acces_oison_api()"},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test si les accès à l'API OISON sont bien renseignés — check_acces_oison_api","text":"Aucune valeur. Une erreur est renvoyée si les accès ne sont pas renseignés.","code":""},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test si les accès à l'API OISON sont bien renseignés — check_acces_oison_api","text":"","code":"if (FALSE) { # \\dontrun{ check_acces_oison_api() } # }"},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Test si les paramètres à la BDD OISON en SQL sont bien renseignés — check_acces_oison_sql","title":"Test si les paramètres à la BDD OISON en SQL sont bien renseignés — check_acces_oison_sql","text":"Fonction pour tester si les paramètres pour l'accès à la BDD OISON en SQL sont bien stockés dans l'environnement R (fichier `.Renviron`).","code":""},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test si les paramètres à la BDD OISON en SQL sont bien renseignés — check_acces_oison_sql","text":"","code":"check_acces_oison_sql()"},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test si les paramètres à la BDD OISON en SQL sont bien renseignés — check_acces_oison_sql","text":"Aucune valeur. Une erreur est renvoyée si les paramètres ne sont pas renseignés.","code":""},{"path":"https://richaben.github.io/oisonR/reference/check_acces_oison_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test si les paramètres à la BDD OISON en SQL sont bien renseignés — check_acces_oison_sql","text":"","code":"if (FALSE) { # \\dontrun{ check_acces_oison_sql() } # }"},{"path":"https://richaben.github.io/oisonR/reference/get_table_milieu_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","title":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","text":"Permet de créer une 'table milieu' à partir de la base SQL. Par défaut, la table créée correspond à l'ensemble des observations sur les milieux bancarisés dans OISON. Si un argument geometrie est fourni, la table créée correspond aux observations sur les milieux sur la zone géographique spécifiée par la géométrie.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_milieu_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","text":"","code":"get_table_milieu_sql(conn, geometrie, ...)"},{"path":"https://richaben.github.io/oisonR/reference/get_table_milieu_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","text":"conn nom de la base à utiliser. geometrie chaîne de caractères.  Elle est utilisée pour la requête SQL pour filtrer les données.  La géométrie doit être sous la forme d'une chaîne de caractères (ex. \"POLYGON((x1 y1, x2 y2, x3 y3, x4 y4, x1 y1))\".  Sa projection doit être en RGF93 / Lambert-93 (EPSG=2154). ... arguments supplémentaires","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_milieu_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","text":"un dataframe avec les observations milieu","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_milieu_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fonction pour créer le tableau milieu OISON via connexion SQL — get_table_milieu_sql","text":"","code":"if (FALSE) { # \\dontrun{ ### ------------- ### ## Exemple 1. Export sans géométrie bdd_oison <- start_sql_connexion()  df_milieu_oison_sql <- get_table_milieu_sql(conn = bd_oison)  stop_sql_connexion(conn = bdd_oison)  ### ------------- ### ## Exemple 2. Export avec géométrie spécifiée # a) créer une géométrie # devtools::install_github(\"MaelTheuliere/COGiter\")  geom_normandie <-   COGiter::regions_geo %>%   dplyr::filter(REG == 28) %>%   sf::st_as_sfc() %>%   # convert to text   sf::st_as_text()  # b) faire la requête bdd_oison <- start_sql_connexion()  df_taxon_milieu_sql_normandie <- get_table_milieu_sql(conn = bdd_oison, geometrie = geom_normandie)  stop_sql_connexion(conn = bdd_oison) } # }"},{"path":"https://richaben.github.io/oisonR/reference/get_table_taxon_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","title":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","text":"Permet de créer une 'table taxon' à partir de la base SQL. Par défaut, la table créée correspond à l'ensemble des observations sur les taxons bancarisés dans OISON. Si un argument geometrie est fourni, la table créée correspond aux observations sur les taxons sur la zone géographique spécifiée par la géométrie.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_taxon_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","text":"","code":"get_table_taxon_sql(conn, geometrie, ...)"},{"path":"https://richaben.github.io/oisonR/reference/get_table_taxon_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","text":"conn nom de la base à utiliser geometrie chaîne de caractères.  Elle est utilisée pour la requête SQL pour filtrer les données.  La géométrie doit être sous la forme d'une chaîne de caractères (ex. \"POLYGON((x1 y1, x2 y2, x3 y3, x4 y4, x1 y1))\".  Sa projection doit être en RGF93 / Lambert-93 (EPSG=2154). ... arguments supplémentaires","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_taxon_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","text":"un dataframe avec les observations taxons.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_table_taxon_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fonction pour créer le tableau taxon OISON via connexion SQL — get_table_taxon_sql","text":"","code":"if (FALSE) { # \\dontrun{ ### ------------- ### ## Exemple 1. Export sans géométrie bdd_oison <- start_sql_connexion()  df_taxon_oison_sql <- get_table_taxon_sql(conn = bd_oison)  stop_sql_connexion(conn = bdd_oison)  ### ------------- ### ## Exemple 2. Export avec géométrie spécifiée # a) créer une géométrie # devtools::install_github(\"MaelTheuliere/COGiter\")  geom_normandie <-   COGiter::regions_geo %>%   dplyr::filter(REG == 28) %>%   sf::st_as_sfc() %>%   # convert to text   sf::st_as_text()  # b) faire la requête bdd_oison <- start_sql_connexion()  df_taxon_oison_sql_normandie <- get_table_taxon_sql(conn = bdd_oison, geometrie = geom_normandie)  stop_sql_connexion(conn = bdd_oison)  } # }"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_dpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","text":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_dpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","text":"","code":"get_taxon_dpt(   dpt_code,   login,   mdp,   collect_all = FALSE,   date_min = NULL,   date_max = NULL )"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_dpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","text":"dpt_code code du département (ex. 27) login login du compte OISON mdp mot de passe associé au compte OISON collect_all Booléen. Si FALSE (par défaut) consultation du nombre d'observation (FALSE). Si TRUE, télécharge les données pour les taxons. date_min date minimale pour la période au format (%Y-%m-%d ; cf. exemple '2022-01-01'). NULL par défaut. date_max date maximum pour la période au format (%Y-%m-%d ; cf. exemple '2022-12-31'). NULL par défaut.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_dpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","text":"Si collect_all=FALSE, retourne un dataframe indiquant le nombre d'observations dans le département.  Si collect_all=TRUE, retourne un dataframe avec le détail des observations taxons.  Si date_min et date_max sont spécifiés, retourne un dataframe avec les valeurs sur la période.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_dpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour un département — get_taxon_dpt","text":"","code":"if (FALSE) { # \\dontrun{ # -> Exemple pour consulter rapidement le nombre d'observations dans le département 27, # sans téléchargement des données : get_taxon_dpt(dpt_code = \"27\",               login = \"john.doe@ofb.gouv.fr\",               mdp = \"mon_mdp\")  # -> Exemple pour consulter rapidement le nombre d'observations sur la période 2022 # dans le département 27, sans téléchargement des données : get_taxon_dpt(   dpt_code = \"27\",   login = \"john.doe@ofb.gouv.fr\",   mdp = \"mon_mdp\",   date_min = '2022-01-01',   date_max = '2022-12-31' )  # -> Exemple pour télécharger les données dans le département 27 obs_dpt27 <-   get_taxon_dpt(login = \"john.doe@ofb.gouv.fr\",                 mdp = \"mon_mdp\",                 dpt_code = \"27\",                 collect_all = T) } # }"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","title":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","text":"Consulter et télécharger les données OISON sur une zone définie (type polygone)","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","text":"","code":"get_taxon_polygon(   zone_selection,   login,   mdp,   collect_all = FALSE,   draw_zone = FALSE,   date_min = NULL,   date_max = NULL )"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","text":"zone_selection un objet contenant le zone (polygon), au CRS RGF93 (epsg: 2154) login login du compte OISON mdp mot de passe associé au compte OISON collect_all Booléen. Si FALSE (par défaut) consultation du nombre d'observation (FALSE). Si TRUE télécharge les données. draw_zone Booléen. Si TRUE, lance l'outil de sélection de zones. Par défaut, FALSE. date_min date minimale pour la période au format (%Y-%m-%d ; cf. exemple '2022-01-01'). NULL par défaut. date_max date maximum pour la période au format (%Y-%m-%d ; cf. exemple '2022-12-31'). NULL par défaut.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","text":"Si collect_all=FALSE, retourne uniquement un dataframe avec le nombre d'observations associé  sur la zone géographique sélectionnée.  Si collect_all=TRUE, retourne un dataframe avec les observations pour les taxons.  Si date_min et date_max sont spécifiés, retourne un dataframe avec les valeurs sur la période.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consulter et télécharger les données OISON sur une zone définie (type polygone) — get_taxon_polygon","text":"","code":"if (FALSE) { # \\dontrun{ rm(selection_zone)  ## Exemple 1) Collecter des données sur un polygone défini manuellement: test_zone <-   \"POLYGON ((410677.9 6877209, 413275.2 6929083, 496961.8 6925506, 495122.6 6873600, 410677.9 6877209))\"  get_taxon_polygon(zone_selection = test_zone,                   login = \"john.doe@ofb.gouv.fr\",                   mdp = \"mon_mdp\",                   collect_all = F,                   draw_zone = F)  ## Exemple 2) Consulter des données sur un polygone tracé via l'outil de traçage: get_taxon_polygon(login = \"john.doe@ofb.gouv.fr\",                   mdp = \"mon_mdp\",                   collect_all = F,                   draw_zone = T)  ## Exemple 3) Collecter des données sur un polygone tracé en même temps avec l'outil de traçage: get_taxon_polygon(login = \"john.doe@ofb.gouv.fr\",                   mdp = \"mon_mdp\",                   collect_all = T,                   draw_zone = T)  ## Exemple 4) Consulter des données sur un polygone déjà sauvegardé dans l'environnement: get_taxon_polygon(login = \"john.doe@ofb.gouv.fr\",                   mdp = \"mon_mdp\",                   collect_all = F,                   draw_zone = F)  ## Exemple 5) Consulter des données sur un polygone connu et ## défini manuellement sur une période précise:  test_zone <-   \"POLYGON ((410677.9 6877209, 413275.2 6929083, 496961.8 6925506, 495122.6 6873600, 410677.9 6877209))\"  get_taxon_polygon(zone_selection = test_zone,                   login = \"john.doe@ofb.gouv.fr\",                   mdp = \"mon_mdp\",                   collect_all = F,                   draw_zone = T,                   date_min = '2022-01-01',                   date_max = '2022-12-31') } # }"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","text":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","text":"","code":"get_taxon_region(   region_code,   login,   mdp,   collect_all = FALSE,   date_min = NULL,   date_max = NULL )"},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","text":"region_code Code INSEE de la région (ex. 28 pour la Normandie, ...) login login du compte OISON mdp mot de passe associé au compte OISON collect_all Booléen. Si FALSE (par défaut) consultation du nombre d'observation. Si TRUE, télécharge les données pour les taxons. date_min date minimale pour la période au format (%Y-%m-%d ; cf. exemple '2022-01-01'). NULL par défaut. date_max date maximum pour la période au format (%Y-%m-%d ; cf. exemple '2022-12-31'). NULL par défaut.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","text":"Si collect_all=FALSE, retourne un dataframe indiquant le nombre d'observations sur la région choisie.  Si collect_all=TRUE, retourne un dataframe avec le détail des observations taxons.  Si date_min et date_max sont spécifiés, retourne un dataframe avec les valeurs sur la période.","code":""},{"path":"https://richaben.github.io/oisonR/reference/get_taxon_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consulter et télécharger les données sur les taxons de la bdd OISON pour une région administrative — get_taxon_region","text":"","code":"if (FALSE) { # \\dontrun{ # -> Exemple pour consulter rapidement le nombre de données dans la région # Ile-de-France (code région = 11)  get_taxon_region(region_code = \"11\",                  login = \"john.doe@ofb.gouv.fr\",                  mdp = \"mon_mdp\")  # -> Exemple pour télécharger les données dans # la région Île-de-France (code région 11)  obs_regIDF <-   get_taxon_region(region_code = \"11\",                    login = \"john.doe@ofb.gouv.fr\",                    mdp = \"mon_mdp\",                    collect_all = T)  # -> Exemple pour télécharger les données dans la région # Île-de-France (code région 11) sur la période 2022  obs_regIDF_2022 <-   get_taxon_region(login = \"john.doe@ofb.gouv.fr\",                    mdp = \"mon_mdp\",                    region_code = \"11\",                    date_min = '2022-01-01',                    date_max = '2022-12-31',                    collect_all = T) } # }"},{"path":"https://richaben.github.io/oisonR/reference/imp_importer_dump_oison.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","title":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","text":"Fonction pour importer un dump de la base OISON","code":""},{"path":"https://richaben.github.io/oisonR/reference/imp_importer_dump_oison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","text":"","code":"imp_importer_dump_oison(fichier_dump)"},{"path":"https://richaben.github.io/oisonR/reference/imp_importer_dump_oison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","text":"fichier_dump chemin vers l'objet .sql du dump","code":""},{"path":"https://richaben.github.io/oisonR/reference/imp_importer_dump_oison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","text":"L'ensemble des tables de la base (sauf tables 'mapping')","code":""},{"path":"https://richaben.github.io/oisonR/reference/imp_importer_dump_oison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fonction pour importer un dump de la base OISON — imp_importer_dump_oison","text":"","code":"if (FALSE) { # \\dontrun{ imp_importer_dump_oison(fichier_dump = \"./raw_data/PROD_oison.sql\") } # }"},{"path":"https://richaben.github.io/oisonR/reference/mef_dump_creer_table_taxon.html","id":null,"dir":"Reference","previous_headings":"","what":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","title":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","text":"Cette fonction permet de créer un tableau avec les observations taxon présentes dans la  base OISON, à partir des tables importées par le dump de la base.","code":""},{"path":"https://richaben.github.io/oisonR/reference/mef_dump_creer_table_taxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","text":"","code":"mef_dump_creer_table_taxon()"},{"path":"https://richaben.github.io/oisonR/reference/mef_dump_creer_table_taxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","text":"un dataframe avec les observations taxons.  La colonne geometry spécifie le type de géométrie (point, lignes, polygones) pour l'observation,  et doit être traitée avec précaution lors d'un export sous un autre format (.csv, ...).","code":""},{"path":"https://richaben.github.io/oisonR/reference/mef_dump_creer_table_taxon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","text":"Nécessite au préalable d'importer le dump sql avec la fonction imp_importer_dump_oison.","code":""},{"path":"https://richaben.github.io/oisonR/reference/mef_dump_creer_table_taxon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fonction pour créer un tableau taxon issu d'un dump OISON — mef_dump_creer_table_taxon","text":"","code":"if (FALSE) { # \\dontrun{ df_taxon_oison <- mef_dump_creer_table_taxon() } # }"},{"path":"https://richaben.github.io/oisonR/reference/oisonR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"oisonR: R Package pour collecter et utiliser les données OISON — oisonR-package","title":"oisonR: R Package pour collecter et utiliser les données OISON — oisonR-package","text":"Ensemble de fonctions pour utiliser les données bancarisées sur OISON, l'application pour les saisies opportunistes de l'Office français de la biodiversité (OFB).","code":""},{"path":[]},{"path":"https://richaben.github.io/oisonR/reference/oisonR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"oisonR: R Package pour collecter et utiliser les données OISON — oisonR-package","text":"Maintainer: Benoit Richard benoit.richard@ofb.gouv.fr (ORCID)","code":""},{"path":"https://richaben.github.io/oisonR/reference/outil_selection_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Outil interactif pour tracer une zone (type polygone) — outil_selection_zone","title":"Outil interactif pour tracer une zone (type polygone) — outil_selection_zone","text":"Outil interactif pour tracer une zone (type polygone)","code":""},{"path":"https://richaben.github.io/oisonR/reference/outil_selection_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outil interactif pour tracer une zone (type polygone) — outil_selection_zone","text":"","code":"outil_selection_zone()"},{"path":"https://richaben.github.io/oisonR/reference/outil_selection_zone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outil interactif pour tracer une zone (type polygone) — outil_selection_zone","text":"Lance une fenêtre interactive Shiny pour sélectionner son polygone et  le sauver dans l'environnement pour une future requête  avec la fonction get_taxon_polygon.","code":""},{"path":"https://richaben.github.io/oisonR/reference/outil_selection_zone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outil interactif pour tracer une zone (type polygone) — outil_selection_zone","text":"","code":"if (FALSE) { # \\dontrun{ # -> Lancer l'outil et suivre les instructions outil_selection_zone() } # }"},{"path":"https://richaben.github.io/oisonR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://richaben.github.io/oisonR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://richaben.github.io/oisonR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://richaben.github.io/oisonR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://richaben.github.io/oisonR/reference/start_sql_connexion.html","id":null,"dir":"Reference","previous_headings":"","what":"Démarre une connexion à OISON via la base de données SQL — start_sql_connexion","title":"Démarre une connexion à OISON via la base de données SQL — start_sql_connexion","text":"Fonction qui utilise les paramètres de connexion à la base stockés dans l'environnement R (fichier `.Renviron`), et lance la connexion à la base.","code":""},{"path":"https://richaben.github.io/oisonR/reference/start_sql_connexion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Démarre une connexion à OISON via la base de données SQL — start_sql_connexion","text":"","code":"start_sql_connexion()"},{"path":"https://richaben.github.io/oisonR/reference/start_sql_connexion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Démarre une connexion à OISON via la base de données SQL — start_sql_connexion","text":"Aucune valeur. Une erreur est renvoyée si la connexion est impossible.","code":""},{"path":"https://richaben.github.io/oisonR/reference/start_sql_connexion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Démarre une connexion à OISON via la base de données SQL — start_sql_connexion","text":"","code":"if (FALSE) { # \\dontrun{ bdd_oison <- start_sql_connexion() } # }"},{"path":"https://richaben.github.io/oisonR/reference/stop_sql_connexion.html","id":null,"dir":"Reference","previous_headings":"","what":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","title":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","text":"Fonction stoppe la connexion à la base.","code":""},{"path":"https://richaben.github.io/oisonR/reference/stop_sql_connexion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","text":"","code":"stop_sql_connexion(conn)"},{"path":"https://richaben.github.io/oisonR/reference/stop_sql_connexion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","text":"conn nom de la base à stopper.","code":""},{"path":"https://richaben.github.io/oisonR/reference/stop_sql_connexion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","text":"Aucune valeur.","code":""},{"path":"https://richaben.github.io/oisonR/reference/stop_sql_connexion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stoppe une connexion à OISON via la base de données SQL — stop_sql_connexion","text":"","code":"if (FALSE) { # \\dontrun{ bdd_oison <- start_sql_connexion()  stop_sql_connexion(conn = bdd_oison) } # }"}]
